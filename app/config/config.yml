imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    jms_serializer.camel_case_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
#    serializer:      { enable_annotations: true }
    serializer:
        enabled: false
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }



# FOSUserBundle
#fos_user:
#    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
#    firewall_name: main
#    user_class: France\TvBundle\Entity\User


# FOSRestBundle
fos_rest:
    routing_loader:
        include_format: false
    view:
        view_response_listener: true
        formats:
            json: true
            xml:  true
            html: true
    serializer:
        serialize_null:  true
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json', 'xml', 'html'], fallback_format: 'json', prefer_extension: false }
            - { path: ^/, priorities: ['html', '*/*'], fallback_format: html, prefer_extension: true }
    # configuration à rajouter pour activer le body listener alimente Request
    body_listener:
        enabled: true
    exception:
        enabled: true
    param_fetcher_listener:
        enabled: true


nelmio_api_doc:
    sandbox:
        enabled:  true  # Juste pour la lisibilité car true est déjà la valeur par défaut
        endpoint: http://rest-api.local

        authentication:
            name: X-Auth-Token
            delivery: header

        accept_type: application/json   # valeur par défaut de l'entête Accept

        body_format:
            formats: [ json, xml ]
            default_format: json

        request_format:
            formats:
                json: application/json
                xml: application/xml

            method: accept_header
            default_format: json

    swagger:
        api_base_path:        /
        swagger_version:      '1.2'
        api_version:          '1.0'
        info:
            title:                Rest API
            description:          'Proposition de sortie aux utilisateurs'

#nelmio_api_doc:
#    sandbox:
#        request_format:
#            method: accept_header # default format_param, alternately accept_header, decides how to request the response format
#        entity_to_choice: false
#        authentication:             # default is `~` (`null`), if set, the sandbox automatically                    # send authenticated requests using the configured `delivery`
#            delivery: http          # `query`, `http`, and `header` are supported
#            name: Authorization      # access token name or query parameter name or header name
#            type:     bearer

jms_serializer:
    handlers:
        datetime:
            default_format: "Y-m-d\\TH:i:sP"
            default_timezone: "UTC"